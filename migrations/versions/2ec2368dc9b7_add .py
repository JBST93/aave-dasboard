"""empty message

Revision ID: 2ec2368dc9b7
Revises: 836bbd7336c4
Create Date: 2024-09-10 13:07:14.414274

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2ec2368dc9b7'
down_revision = '836bbd7336c4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('money_market_rate')
    op.drop_table('project_categories')

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.add_column(sa.Column('timestamp', sa.DateTime(), nullable=True))
        batch_op.alter_column('token_ticker',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('category_main',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('contract_main',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['protocol_name'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('contract_main',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
        batch_op.alter_column('category_main',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=True)
        batch_op.alter_column('token_ticker',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.drop_column('timestamp')

    op.create_table('project_categories',
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='project_categories_category_id_fkey'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name='project_categories_project_id_fkey'),
    sa.PrimaryKeyConstraint('project_id', 'category_id', name='project_categories_pkey')
    )
    op.create_table('money_market_rate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('protocol', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('collateral', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('liquidity_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('liquidity_reward_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('liquidity_reward_token', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('borrow_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('chain', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('tvl', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='money_market_rate_pkey')
    )
    # ### end Alembic commands ###
